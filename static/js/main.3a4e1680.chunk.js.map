{"version":3,"sources":["components/box.js","components/quotes.js","components/icons.js","index.js"],"names":["Box","quote","author","nextQuote","nextColor","id","onClick","quotesArr","RandomQuote","randomIndex","Math","floor","random","length","Icons","link","title","href","target","src","process","alt","App","state","displayQuote","bgColor","getRandomQuote","setState","getRandomColor","item","document","body","style","backgroundColor","this","Component","ReactDOM","render","getElementById"],"mappings":"+LAwBeA,EApBH,SAAC,GAA4C,IAA1CC,EAAyC,EAAzCA,MAAOC,EAAkC,EAAlCA,OAAQC,EAA0B,EAA1BA,UAAWC,EAAe,EAAfA,UACvC,OACE,sBAAKC,GAAG,YAAR,UACE,sBAAKA,GAAG,aAAR,UACE,qBAAIA,GAAG,OAAP,eAAiBJ,EAAjB,QACA,oBAAII,GAAG,SAAP,SAAiBH,OAEnB,wBACEI,QAAS,WACPH,IACAC,KAEFC,GAAG,YALL,uBALF,IAaY,2BCjBVE,EAAY,CACd,CACIN,MAAO,6EACPC,OAAQ,kBAEZ,CACID,MAAO,iDACPC,OAAQ,uBAEZ,CACID,MAAO,uHACPC,OAAQ,qBAEZ,CACID,MAAO,2CACPC,OAAQ,cAEZ,CACID,MAAM,iEACNC,OAAO,eAEX,CACID,MAAM,qCACNC,OAAO,gBAEX,CACID,MAAM,8DACNC,OAAO,YAEX,CACID,MAAM,gHACNC,OAAQ,oBAEZ,CACID,MAAM,+EACNC,OAAO,mBAEX,CACID,MAAM,qEACNC,OAAO,aAEX,CACID,MAAM,yFACNC,OAAO,cAEX,CACID,MAAM,+DACNC,OAAO,WASAM,EALK,WAChB,IAAIC,EAAcC,KAAKC,MAAMD,KAAKE,SAAWL,EAAUM,QACvD,OAAON,EAAUE,ICxCNK,EAbF,SAAC,GAAoB,IAE1BC,EAAO,yCAFkB,EAAlBd,MAEmD,MAFjC,EAAXC,OAIlB,OACI,8BACI,mBAAGG,GAAG,cAAcW,MAAM,oBAAoBC,KAAMF,EAAMG,OAAO,SAAjE,SACI,qBAAKC,IAAMC,4BAAyCC,IAAI,sBCHlEC,E,4MACJC,MAAQ,CACNC,aAAc,GACdC,QAAS,CACP,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,Y,EAIJC,eAAiB,WACf,EAAKC,SAAS,CACZH,aAAchB,O,EAIlBoB,eAAiB,WACf,IAAIC,EAAO,EAAKN,MAAME,QAAQf,KAAKC,MAAMD,KAAKE,SAAS,EAAKW,MAAME,QAAQZ,SAC1EiB,SAASC,KAAKC,MAAMC,gBAAkBJ,G,uDAGxC,WACEK,KAAKR,iBACLQ,KAAKN,mB,oBAIP,WACE,OACE,gCACE,cAAC,EAAD,CACE3B,MAAOiC,KAAKX,MAAMC,aAAavB,MAC/BC,OAAQgC,KAAKX,MAAMC,aAAatB,OAChCC,UAAW+B,KAAKR,eAChBtB,UAAW8B,KAAKN,iBAElB,cAAC,EAAD,CACE3B,MAAOiC,KAAKX,MAAMC,aAAavB,MAC/BC,OAAQgC,KAAKX,MAAMC,aAAatB,gB,GAlDxBiC,aAyDlBC,IAASC,OAAO,cAAC,EAAD,IAASP,SAASQ,eAAe,U","file":"static/js/main.3a4e1680.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./app.scss\";\r\n\r\n\r\nconst Box = ({ quote, author, nextQuote, nextColor}) => {\r\n  return (\r\n    <div id=\"quote-box\">\r\n      <div id=\"quote-text\">\r\n        <h1 id=\"text\">\" {quote} \"</h1>\r\n        <h2 id=\"author\">{author}</h2>\r\n      </div>\r\n      <button\r\n        onClick={() => {\r\n          nextQuote();\r\n          nextColor();\r\n        }}\r\n        id=\"new-quote\"\r\n      >\r\n        New Quote\r\n      </button> <br></br>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Box;\r\n","import \"./app.scss\"\r\n\r\nconst quotesArr = [\r\n    {\r\n        quote: \"Live as if you were to die tomorrow. Learn as if you were to live forever.\",\r\n        author: \"Mahatma Gandhi\"\r\n    },\r\n    {\r\n        quote: \"That which does not kill us makes us stronger.\",\r\n        author: \"Friedrich Nietzsche\"\r\n    },\r\n    {\r\n        quote: \"Be who you are and say what you feel, because those who mind don’t matter and those who matter don’t mind.\",\r\n        author: \"Bernard M. Baruch\"\r\n    },\r\n    {\r\n        quote: \"The purpose of our lives is to be happy.\",\r\n        author: \"Dalai Lama\"\r\n    },\r\n    {\r\n        quote:\"Life is what happens when you’re busy making other plans.\",\r\n        author:\"John Lennon\"\r\n    },\r\n    {\r\n        quote:\"Get busy living or get busy dying.\",\r\n        author:\"Stephen King\"\r\n    },\r\n    {\r\n        quote:\"You only live once, but if you do it right, once is enough.\",\r\n        author:\"Mae West\"\r\n    },\r\n    {\r\n        quote:\"Many of life’s failures are people who did not realize how close they were to success when they gave up.\",\r\n        author: \"Thomas A. Edison\"\r\n    },\r\n    {\r\n        quote:\"If you want to live a happy life, tie it to a goal, not to people or things.\",\r\n        author:\"Albert Einstein\"\r\n    },\r\n    {\r\n        quote:\"Never let the fear of striking out keep you from playing the game.\",\r\n        author:\"Babe Ruth\"\r\n    },\r\n    {\r\n        quote:\"Money and success don’t change people; they merely amplify what is already there.\",\r\n        author:\"Will Smith\"\r\n    },\r\n    {\r\n        quote:\"Not how long, but how well you have lived is the main thing.\",\r\n        author:\"Seneca\"\r\n    }\r\n]\r\n\r\nconst RandomQuote = () => {\r\n    let randomIndex = Math.floor(Math.random() * quotesArr.length);\r\n    return quotesArr[randomIndex];\r\n}\r\n\r\nexport default RandomQuote;","import React from \"react\";\r\n\r\nconst Icons =({quote, author})=> {\r\n\r\n    let link = \"https://twitter.com/intent/tweet?text=\" + quote + \" - \" + author;\r\n\r\n    return (\r\n        <div>\r\n            <a id=\"tweet-quote\" title=\"Tweet this quote!\" href={link} target=\"_blank\">\r\n                <img src= {process.env.PUBLIC_URL + \"/twitter.png\"} alt=\"Twitter icon\"></img>\r\n            </a>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Icons;","import { Component } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport Box from \"./components/box\";\r\nimport RandomQuote from \"./components/quotes\";\r\nimport Icons from \"./components/icons\";\r\n\r\nclass App extends Component {\r\n  state = {\r\n    displayQuote: {},\r\n    bgColor: [\r\n      '#caf7e3',\r\n      '#f8eded',\r\n      '#f6dfeb',\r\n      \"#ffeedb\",\r\n      \"#ffbd9b\",\r\n      \"#cee5d0\",\r\n      \"#f3f0d7\",\r\n      \"#d8b384\",\r\n      \"#faf1e6\",\r\n      \"#39a9cb\",\r\n      \"#2940d3\",\r\n      \"#ff449f\",\r\n      \"#00ead3\",\r\n      \"#fc92e3\",\r\n      \"#005792\"\r\n    ],\r\n  };\r\n\r\n  getRandomQuote = () => {\r\n    this.setState({\r\n      displayQuote: RandomQuote(),\r\n    });\r\n  };\r\n\r\n  getRandomColor = () => {\r\n    var item = this.state.bgColor[Math.floor(Math.random()*this.state.bgColor.length)];\r\n    document.body.style.backgroundColor = item;\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getRandomQuote();\r\n    this.getRandomColor();\r\n    \r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Box\r\n          quote={this.state.displayQuote.quote}\r\n          author={this.state.displayQuote.author}\r\n          nextQuote={this.getRandomQuote}\r\n          nextColor={this.getRandomColor}\r\n        />\r\n        <Icons\r\n          quote={this.state.displayQuote.quote}\r\n          author={this.state.displayQuote.author}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}